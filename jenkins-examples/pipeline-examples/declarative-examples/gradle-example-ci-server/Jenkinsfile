pipeline {
    agent any

    environment {
        SERVER_URL = 'http://localhost:9083/artifactory' // Local Artifactory URL
        CREDENTIALS = 'artifactory-creds'                // Jenkins credentials ID
        ARTIFACTORY_LOCAL_RELEASE_REPO = 'libs-release-local'
        ARTIFACTORY_VIRTUAL_RELEASE_REPO = 'libs-release' // or a virtual repo if defined
        GRADLE_TOOL = 'gradle' // Must match tool name in Jenkins global tools
    }

    stages {
        stage ('Clone') {
            steps {
                git branch: 'master', url: "https://github.com/jfrog/project-examples.git"
            }
        }

        stage ('Artifactory configuration') {
            steps {
                rtServer (
                    id: "ARTIFACTORY_SERVER",
                    url: SERVER_URL,
                    credentialsId: CREDENTIALS
                )

                rtGradleDeployer (
                    id: "GRADLE_DEPLOYER",
                    serverId: "ARTIFACTORY_SERVER",
                    repo: ARTIFACTORY_LOCAL_RELEASE_REPO
                )

                rtGradleResolver (
                    id: "GRADLE_RESOLVER",
                    serverId: "ARTIFACTORY_SERVER",
                    repo: ARTIFACTORY_VIRTUAL_RELEASE_REPO
                )
            }
        }

        stage ('Exec Gradle') {
            steps {
                rtGradleRun (
                    tool: GRADLE_TOOL,
                    rootDir: "gradle-examples/gradle-example-ci-server/",
                    tasks: 'clean artifactoryPublish',
                    deployerId: "GRADLE_DEPLOYER",
                    resolverId: "GRADLE_RESOLVER"
                )
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "ARTIFACTORY_SERVER"
                )
            }
        }
    }
}
